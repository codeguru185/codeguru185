import os
import logging
from logging.handlers import TimedRotatingFileHandler
from airflow.logging_config import configure_logging

class CustomLoggingConfigurator(configure_logging):
    def configure(self):
        super().configure()

        # Get the root logger
        root_logger = logging.getLogger()

        # Remove any existing handlers to avoid duplicate logs
        for handler in root_logger.handlers[:]:
            root_logger.removeHandler(handler)

        # Path to the scheduler logs directory
        scheduler_logs_dir = '/path/to/scheduler/logs'

        # Iterate over subdirectories in the scheduler logs directory
        for subdir in os.listdir(scheduler_logs_dir):
            subdir_path = os.path.join(scheduler_logs_dir, subdir)
            if os.path.isdir(subdir_path):
                # Create a TimedRotatingFileHandler for scheduler logs in this subdirectory
                log_file = os.path.join(subdir_path, 'scheduler.log')
                rotating_handler = TimedRotatingFileHandler(log_file, when='midnight', backupCount=7)

                # Set log rotation parameters
                rotating_handler.setFormatter(logging.Formatter('%(asctime)s - %(levelname)s - %(message)s'))
                rotating_handler.setLevel(logging.INFO)

                # Add the rotating handler to the root logger
                root_logger.addHandler(rotating_handler)
