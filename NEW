import pandas as pd
import numpy as np
from statistics import try_int, try_float

# Sample DataFrame (Replace this with your own DataFrame)
data = {
    'Category1': ['A', 'B', 'A', 'C', 'B'],
    'Category2': ['X', 'Y', 'Z', 'X', 'Y'],
    'Date1': ['2022-01-01', '2022-01-02', '2022-01-03', '2022-01-04', '2022-01-05'],
    'Timestamp1': ['2022-01-01 12:00:00', '2022-01-02 14:30:00', '2022-01-03 10:15:00', '2022-01-04 16:45:00', '2022-01-05 08:30:00'],
    'Amount1': [100, 200, 300, 400, 500],
    'Amount2': [50, 75, 120, 80, 90],
    'Numeric1': [5, 10, 15, 20, 25],
    'Numeric2': [1.2, 2.5, 3.8, 4.0, 5.5],
    'Decimal1': [1.234, 2.345, 3.456, 4.567, 5.678]
}

df = pd.DataFrame(data)

# Function to infer data types based on actual data
def infer_data_type(series):
    try:
        # Attempt to convert to integer
        values = [try_int(val) for val in series]
        if all(val is not None for val in values):
            return 'int'
        
        # Attempt to convert to float
        values = [try_float(val) for val in series]
        if all(val is not None for val in values):
            return 'float'
        
        # Check for date format
        if all(pd.to_datetime(series, errors='coerce').notna()):
            return 'date'
        
        # Check for timestamp format
        if all(pd.to_datetime(series, errors='coerce').notna()) and ' ' in series[0]:
            return 'timestamp'
        
        # Check for numeric with 2 decimal places
        if all(isinstance(val, (float, int)) and str(val).count('.') == 1 and len(str(val).split('.')[1]) == 2 for val in series):
            return 'amount'
        
        # Default to string
        return 'string'
    except:
        # Default to string on any error
        return 'string'

# Infer data types for each column based on the actual data
data_types = {col: infer_data_type(df[col]) for col in df.columns}

# Create lists of CSV files based on data type categories
categorical_less_than_10 = [col for col, data_type in data_types.items() if data_type == 'string' and df[col].nunique() < 10]
categorical_10_to_20 = [col for col, data_type in data_types.items() if data_type == 'string' and 10 <= df[col].nunique() <= 20]
numerical_variables = [col for col, data_type in data_types.items() if data_type in ('int', 'float')]
amount_variables = [col for col, data_type in data_types.items() if data_type == 'amount']
date_variables = [col for col, data_type in data_types.items() if data_type == 'date']
timestamp_variables = [col for col, data_type in data_types.items() if data_type == 'timestamp']

# Define the file names for each category
file_names = {
    'categorical_less_than_10.csv': categorical_less_than_10,
    'categorical_10_to_20.csv': categorical_10_to_20,
    'numerical_variables.csv': numerical_variables,
    'amount_variables.csv': amount_variables,
    'date_variables.csv': date_variables,
    'timestamp_variables.csv': timestamp_variables
}

# Save the field names to CSV files
for file_name, field_names in file_names.items():
    with open(file_name, 'w') as file:
        file.write('\n'.join(field_names))
